@page "/Raffle"
@rendermode InteractiveServer
@inject IConfiguration Configuration
@using Azure.Data.Tables
@using Azure
@using System.Diagnostics
@inject TableClient TableClient
@inject ILogger<Raffle> Logger
<PageTitle>Raffle</PageTitle>

<h1>Raffle</h1>

<p role="status">Random Number: @_luckyNumber</p>

<button class="btn btn-primary" @onclick="DrawRaffle">Draw Raffle</button>

@if (_luckyNumber % 2 == 0)
{
    <h2>Congratulations! You won 🚀🥇</h2>
}
<button class="btn btn-primary" @onclick="ToggleSlowOperation">Toggle Slow Operation</button>
<h3>Slow Operation Enabled: @_slowOperationEnabled</h3>
@code {
    private int _luckyNumber = 0;
    private bool _slowOperationEnabled = false;
    private async Task DrawRaffle()
    {
        Stopwatch stopwatch = Stopwatch.StartNew();
        if (_slowOperationEnabled)
        {
            await Task.Delay(1000);
        }
        _luckyNumber = Random.Shared.Next(0, 11);
        if (_luckyNumber % 2 == 0)
        {
            await TableClient.AddEntityAsync<RaffleEntity>(new RaffleEntity()
                {
                    PartitionKey = "Raffle",
                    RowKey = Guid.NewGuid().ToString(),
                    LuckyNumber = _luckyNumber
                });
        }
        stopwatch.Stop();
        TimeSpan elapsedTime = stopwatch.Elapsed;
        Logger.LogInformation("Raffle operation took {timetaken} seconds", elapsedTime.Seconds);
    }

    private void ToggleSlowOperation() => _slowOperationEnabled = !_slowOperationEnabled;

    public class RaffleEntity : ITableEntity
    {
        public string? PartitionKey { get; set; }
        public string? RowKey { get; set; }
        public DateTimeOffset? Timestamp { get; set; }
        public ETag ETag { get; set; }
        public int LuckyNumber { get; set; }
    }
}
